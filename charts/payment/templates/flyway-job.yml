apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "payment-app.fullname" . }}-flyway-payment-migration
  labels:
  {{- include "payment-app.labels" . | nindent 4 }}
spec:
  template:
    spec:
      containers:
      - args: [info, repair, migrate, info]
        env:
        - name: FLYWAY_URL
          value: jdbc:postgresql://${DB_HOST}:5432/fourlanchesdb
        - name: FLYWAY_USER
          valueFrom:
            secretKeyRef:
              key: SPRING_DATASOURCE_USERNAME
              name: {{ include "payment-app.fullname" . }}-secret
        - name: FLYWAY_PASSWORD
          valueFrom:
            secretKeyRef:
              key: SPRING_DATASOURCE_PASSWORD
              name: {{ include "payment-app.fullname" . }}-secret
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: flyway/flyway:latest
        name: flyway
        resources: {}
        volumeMounts:
        - mountPath: /flyway/sql
          name: sql
      restartPolicy: Never
      volumes:
      - configMap:
          name: {{ include "payment-app.fullname" . }}-flyway-config
        name: sql
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "payment-app.fullname" . }}-flyway-config
  labels:
  {{- include "payment-app.labels" . | nindent 4 }}
data:
  V1__Create_Product_Table.sql: |-
    CREATE TABLE products (
                              id  SERIAL PRIMARY KEY NOT NULL,
                              name    VARCHAR(255) NOT NULL,
                              category    VARCHAR(255)    NOT NULL,
                              description TEXT    NOT NULL,
                              price  NUMERIC(10, 2),
                              is_available BOOLEAN
    );
  V2__Add_Initial_Products.sql: |-
    INSERT INTO products (name, category, description, price, is_available) VALUES ('Veggie Burguer', 'MEAL', 'Pão de brioche, molho especial, burger de soja, cogumelo, queijo e cebola caramelada', 15.00, true);
    INSERT INTO products (name, category, description, price, is_available) VALUES ('Coca Cola (Lata)', 'DRINK', 'Coca Cola em Lata de 350ml', 6.00, true);
    INSERT INTO products (name, category, description, price, is_available) VALUES ('Fritas', 'EXTRAS', 'Porção de 150g de Batatas Fritas', 10.00, true);
  V3__Create_Order_Table.sql: |-
    CREATE TABLE orders (
                            id  SERIAL PRIMARY KEY NOT NULL,
                            customer_id integer,
                            total_price  NUMERIC(10, 2) NOT NULL,
                            status VARCHAR(255) NOT NULL
    );
  V4__Create_Order_Item_Table.sql: |-
    CREATE TABLE order_items (
                                 id  SERIAL PRIMARY KEY NOT NULL,
                                 order_id integer NOT NULL,
                                 product_id integer NOT NULL,
                                 quantity integer NOT NULL,
                                 price  NUMERIC(10, 2) NOT NULL,
                                 observation VARCHAR(255)
    );
  V5__Create_Customer_Table.sql: |-
    CREATE TABLE customers (
                               id  SERIAL PRIMARY KEY NOT NULL,
                               first_name varchar(255) NOT NULL,
                               last_name varchar(255) NOT NULL,
                               email varchar(255) NOT NULL,
                               document varchar(255) NOT NULL,
                               UNIQUE(email, document)
    );
  V6__Add_Column_Payment_To_Order.sql: |-
    ALTER TABLE orders ADD COLUMN payment_approved BOOLEAN NOT NULL DEFAULT(false);
  V7__Add_Column_Created_At_To_Order.sql: |-
    ALTER TABLE orders ADD COLUMN created_at TIMESTAMP; 